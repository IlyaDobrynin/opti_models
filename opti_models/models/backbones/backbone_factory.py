# -*- coding: utf-8 -*-
"""
Simple backbones factory
"""
from . import (  # Torchvision models
    densenet121,
    densenet161,
    densenet169,
    densenet201,
    efficientnet_b0,
    efficientnet_b0b,
    efficientnet_b0c,
    efficientnet_b1,
    efficientnet_b1b,
    efficientnet_b1c,
    efficientnet_b2b,
    efficientnet_b2c,
    efficientnet_b3b,
    efficientnet_b3c,
    efficientnet_b4b,
    efficientnet_b4c,
    efficientnet_b5b,
    efficientnet_b5c,
    efficientnet_b6b,
    efficientnet_b6c,
    efficientnet_b7b,
    efficientnet_b7c,
    efficientnet_b8c,
    genet_large,
    genet_normal,
    genet_small,
    inception_v3,
    mixnet_l,
    mixnet_m,
    mixnet_s,
    mnasnet0_5,
    mnasnet0_75,
    mnasnet1_0,
    mnasnet1_3,
    mobilenet_v2_,
    mobilenetv2_w1,
    mobilenetv2_w3d4,
    mobilenetv2_wd2,
    mobilenetv2_wd4,
    mobilenetv3_large_w1,
    resnet18,
    resnet34,
    resnet50,
    resnet101,
    resnet152,
    resnext50_32x4d,
    resnext101_32x8d,
    timm_ig_resnext101_32x48d,
    timm_regnetx_002,
    timm_regnetx_004,
    timm_regnetx_006,
    timm_regnetx_008,
    timm_regnetx_016,
    timm_regnetx_032,
    timm_regnetx_040,
    timm_regnetx_064,
    timm_regnetx_080,
    timm_regnetx_120,
    timm_regnetx_160,
    timm_regnetx_320,
    timm_regnety_002,
    timm_regnety_004,
    timm_regnety_006,
    timm_regnety_008,
    timm_regnety_016,
    timm_regnety_032,
    timm_regnety_040,
    timm_regnety_064,
    timm_regnety_080,
    timm_regnety_120,
    timm_regnety_160,
    timm_regnety_320,
    timm_res2net50_14w_8s,
    timm_res2net50_26w_4s,
    timm_res2net50_26w_6s,
    timm_res2net50_26w_8s,
    timm_res2net50_48w_2s,
    timm_res2net101_26w_4s,
    timm_res2next50,
    timm_resnest14d,
    timm_resnetrs420,
    timm_swsl_resnext101_32x8d,
    vgg11,
    vgg11_bn,
    vgg13,
    vgg13_bn,
    vgg16,
    vgg16_bn,
    vgg19,
    vgg19_bn,
    wide_resnet50_2,
    wide_resnet101_2,
)

BACKBONES = {
    # Torchvision models
    'resnet152': resnet152,
    'resnet101': resnet101,
    'resnet50': resnet50,
    'resnet34': resnet34,
    'resnet18': resnet18,
    'vgg11': vgg11,
    'vgg11_bn': vgg11_bn,
    'vgg13': vgg13,
    'vgg13_bn': vgg13_bn,
    'vgg16': vgg16,
    'vgg16_bn': vgg16_bn,
    'vgg19': vgg19,
    'vgg19_bn': vgg19_bn,
    'densenet121': densenet121,
    'densenet169': densenet169,
    'densenet161': densenet161,
    'densenet201': densenet201,
    'inception_v3': inception_v3,
    'resnext50_32x4d': resnext50_32x4d,
    'resnext101_32x8d': resnext101_32x8d,
    'wide_resnet50': wide_resnet50_2,
    'wide_resnet101': wide_resnet101_2,
    'mobilenet_v2': mobilenet_v2_,
    'mnasnet0_5': mnasnet0_5,
    'mnasnet0_75': mnasnet0_75,
    'mnasnet1_0': mnasnet1_0,
    'mnasnet1_3': mnasnet1_3,
    # Mobilenets
    'mobilenetv2_w1': mobilenetv2_w1,
    'mobilenetv2_wd2': mobilenetv2_wd2,
    'mobilenetv2_wd4': mobilenetv2_wd4,
    'mobilenetv2_w3d4': mobilenetv2_w3d4,
    'mobilenetv3_large_w1': mobilenetv3_large_w1,
    # MixNet
    'mixnet_s': mixnet_s,
    'mixnet_m': mixnet_m,
    'mixnet_l': mixnet_l,
    # Efficientnets
    'efficientnet_b0': efficientnet_b0,
    'efficientnet_b1': efficientnet_b1,
    'efficientnet_b0b': efficientnet_b0b,
    'efficientnet_b1b': efficientnet_b1b,
    'efficientnet_b2b': efficientnet_b2b,
    'efficientnet_b3b': efficientnet_b3b,
    'efficientnet_b4b': efficientnet_b4b,
    'efficientnet_b5b': efficientnet_b5b,
    'efficientnet_b6b': efficientnet_b6b,
    'efficientnet_b7b': efficientnet_b7b,
    'efficientnet_b0c': efficientnet_b0c,
    'efficientnet_b1c': efficientnet_b1c,
    'efficientnet_b2c': efficientnet_b2c,
    'efficientnet_b3c': efficientnet_b3c,
    'efficientnet_b4c': efficientnet_b4c,
    'efficientnet_b5c': efficientnet_b5c,
    'efficientnet_b6c': efficientnet_b6c,
    'efficientnet_b7c': efficientnet_b7c,
    'efficientnet_b8c': efficientnet_b8c,
    # Genets
    'genet_small': genet_small,
    'genet_normal': genet_normal,
    'genet_large': genet_large,
    # TIMM MODELS
    # Res2net
    'timm_res2net50_14w_8s': timm_res2net50_14w_8s,
    'timm_res2net50_26w_4s': timm_res2net50_26w_4s,
    'timm_res2net50_26w_6s': timm_res2net50_26w_6s,
    'timm_res2net50_26w_8s': timm_res2net50_26w_8s,
    'timm_res2net50_48w_2s': timm_res2net50_48w_2s,
    'timm_res2net101_26w_4s': timm_res2net101_26w_4s,
    'timm_res2next50': timm_res2next50,
    # Resnet
    'timm_ig_resnext101_32x48d': timm_ig_resnext101_32x48d,
    'timm_resnetrs420': timm_resnetrs420,
    'timm_swsl_resnext101_32x8d': timm_swsl_resnext101_32x8d,
    # Regnet
    'timm_regnetx_002': timm_regnetx_002,
    'timm_regnetx_004': timm_regnetx_004,
    'timm_regnetx_006': timm_regnetx_006,
    'timm_regnetx_008': timm_regnetx_008,
    'timm_regnetx_016': timm_regnetx_016,
    'timm_regnetx_032': timm_regnetx_032,
    'timm_regnetx_040': timm_regnetx_040,
    'timm_regnetx_064': timm_regnetx_064,
    'timm_regnetx_080': timm_regnetx_080,
    'timm_regnetx_120': timm_regnetx_120,
    'timm_regnetx_160': timm_regnetx_160,
    'timm_regnetx_320': timm_regnetx_320,
    'timm_regnety_002': timm_regnety_002,
    'timm_regnety_004': timm_regnety_004,
    'timm_regnety_006': timm_regnety_006,
    'timm_regnety_008': timm_regnety_008,
    'timm_regnety_016': timm_regnety_016,
    'timm_regnety_032': timm_regnety_032,
    'timm_regnety_040': timm_regnety_040,
    'timm_regnety_064': timm_regnety_064,
    'timm_regnety_080': timm_regnety_080,
    'timm_regnety_120': timm_regnety_120,
    'timm_regnety_160': timm_regnety_160,
    'timm_regnety_320': timm_regnety_320,
    # ResneSt
    'timm_resnest14d': timm_resnest14d,
}


def get_backbone(name, *args, **kwargs):
    """Function returns pytorch pretrained model with given args and kwargs
    from the list of backbones

    :param name: Pretrained backbone name
    :param args: Model arguments
    :param kwargs: Model keyword arguments
    :return: Model
    """
    return BACKBONES[name](*args, **kwargs)


def show_available_backbones():
    """Simple returns all available model names

    Returns:
        List of available model names
    """
    return list(BACKBONES.keys())
